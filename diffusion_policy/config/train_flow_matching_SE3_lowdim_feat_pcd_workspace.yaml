# Actually the task entry loads the yaml file inside task
defaults:
  - _self_
  - task: open_drawer
  - encoder: lowdim_keypoint_embedder
  - model: feat_pcd_tit

name: train_flow_matching_unet_lowdim_feat_pcd
_target_: diffusion_policy.workspace.train_flow_matching_SE3_lowdim_workspace.TrainingWorkspace

task_name: ${task.name}
exp_name: "flowmatching"
n_obs_steps: &n_obs_steps 2
horizon: 16
n_action_steps: 8
use_keyframe_actions: False
embedding_dim: 120
num_episodes: 1
mode: train

policy:
  _target_: diffusion_policy.policy.flow_matching_SE3_lowdim_policy.SE3FlowMatchingPolicy
  horizon: ${horizon}
  n_obs_steps: ${n_obs_steps}
  flow_type: 'rectified_linear'
  num_inference_steps: 10
  t_switch: 0.75
  only_inference_time: True
  rotation_loss_scaling: 0.318 #1/pi
  action_adaptor: False
  gripper_out: True
  ignore_collisions_out: True
  augmentor:
    _target_: diffusion_policy.common.augmentors.AugmentGripperHistory
    pos_scale: 0.00
    rot_scale: 0.00

  normalizer:
    _target_: diffusion_policy.common.adapt_and_normalize.AdaptAndNormalize
    adaptor:
      _target_: diffusion_policy.common.adaptors.WorldPoses2EEFPoses
    normalizer:
      _target_: diffusion_policy.model.common.se3_normalizer.SharedPositionNormalizer
      scale: 5.0
  obs_encoder: ${encoder}
  model: ${model}

dataloader:
  batch_size: 64
  num_workers: 1
  shuffle: True
  pin_memory: True
  persistent_workers: False

val_dataloader:
  batch_size: 64
  num_workers: 0
  shuffle: False
  pin_memory: False
  persistent_workers: False

optimizer:
  _target_: torch.optim.AdamW
  lr: 1.0e-4
  betas: [0.95, 0.999]
  eps: 1.0e-8
  weight_decay: 1.0e-6

training:
  device: "cuda:0"
  seed: 21
  debug: False
  resume: False
  # optimization
  lr_scheduler: cosine
  lr_warmup_steps: 500
  num_epochs: 60000
  gradient_accumulate_every: 1
  # EMA destroys performance when used with BatchNorm
  # replace BatchNorm with GroupNorm.
  use_ema: False
  # training loop control
  # in epochs
  model_evaluation_every: 50
  rollout_every: 1000
  checkpoint_every: 100
  val_every: 1
  sample_every: 5
  # steps per epoch
  max_train_steps: null
  max_val_steps: null
  # misc
  tqdm_interval_sec: 1.0
  freeze_encoder: False

ema:
  _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
  inv_gamma: 1.0
  max_value: 0.9999
  min_value: 0.0
  power: 0.75
  update_after_step: 0


checkpoint:
  topk:
    monitor_key: train_loss
    mode: min
    k: 1
    format_str: 'epoch={epoch:04d}-train_loss={train_loss:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

logging:
  project: diffusion_policy_debug
  resume: True
  mode: online
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
  id: null
  group: null
  tags: ["${name}", "${task_name}", "${exp_name}"]

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
